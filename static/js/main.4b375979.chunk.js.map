{"version":3,"sources":["modules/layers/actions/index.js","constants/common/index.js","reducers/createReducer.js","modules/layers/reducers/index.js","modules/data/actions/index.js","modules/data/reducers/index.js","constants/status/index.js","modules/models/actions/index.js","modules/models/reducers/index.js","modules/snackBar/actions/index.js","modules/snackBar/reducers/index.js","reducers/index.js","modules/snackBar/selectors/index.js","constants/snackBar/index.js","components/common/SnackBar/index.js","containers/common/SnackBar/index.js","styles.js","components/TrainNNConponent/styles.js","components/TrainNNConponent/index.js","components/TestNNComponent/styles.js","components/TestNNComponent/index.js","components/common/BackButton/index.js","containers/common/BackButton/index.js","components/common/Header/styles.js","components/common/Header/index.js","components/NNComponent/index.js","helpers/models/index.js","modules/layers/selectors/index.js","helpers/validations/index.js","modules/data/selectors/index.js","components/common/Loader/styles.js","components/common/Loader/index.js","containers/TrainNN/index.js","constants/data/index.js","components/common/Select/index.js","components/CreateNNComponent/styles.js","components/CreateNNComponent/index.js","helpers/layers/index.js","containers/CreateNN/validationRules.js","helpers/common/index.js","containers/CreateNN/index.js","constants/api/index.js","components/StartPage/styles.js","components/StartPage/index.js","containers/StartPage/index.js","components/Routes.js","App.js","helpers/data/index.js","modules/models/selectors/index.js","modules/models/sagas/index.js","sagas/index.js","serviceWorker.js","index.js"],"names":["ADD_LAYERS_PARAMETERS","EMPTY_OBJECT","createReducer","initialState","handlers","state","action","type","layersReducer","parameters","layers","param","assoc","Object","values","FETCH_DATA","FETCH_DATA_SUCCESS","SET_STATUS","setDataStatus","status","dataReducer","data","mergeRight","ADD_MODELS","TRAIN_MODEL","models","SHOW_SNACK_BAR","HIDE_SNACK_BAR","snackBarType","messageText","modalsReducer","always","reducer","combineReducers","snackBar","selectSnackBar","commonMessages","SnackBarComponent","timeout","severity","message","onClose","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","Alert","variant","SnackBar","dispatch","useDispatch","useSelector","useCallback","_","reason","useStyles","makeStyles","wrapper","padding","maxWidth","margin","boxSizing","container","section","display","flexDirection","paddingTop","settings","justifyContent","form","marginTop","marginRight","table","text","alignItems","TrainNNComponent","testSampleSize","trainSampleSize","dataSize","editSampleSize","editLearningOption","batchSize","epochs","trainNN","styles","Container","className","Grid","spacing","item","xs","Typography","component","sm","color","TextField","label","id","value","onChange","fullWidth","paragraph","md","Button","onClick","TestNNComponent","initImageContainer","predsImageContainer","ref","BackButtonComponent","handleClick","IconButton","aria-label","ArrowBack","BackButton","redirectUrl","history","useHistory","push","goBack","header","HeaderComponent","NNComponent","sampleSizes","learningOptions","props","test","train","createAutoencoder","layersOptions","inputLayer","input","shape","flattenImg","flatten","apply","stackOfLayers","createStackOfLayers","index","encoder","model","inputs","outputs","name","createEncoder","decoder","lastIndex","length","Number","units","flattenDecoded","dense","activation","decoderLayers","reshape","targetShape","createDecoder","autoencoder","console","log","compile","optimizer","loss","summary","getNewIndex","layerOptions","act","createDenseLayer","trainModel","nn","trainData","testData","fitCallbacks","show","fit","validationData","shuffle","callbacks","doPrediction","currentModel","a","preds","predict","examples","numExamples","i","imageTensor","tidy","slice","canvas","document","createElement","width","height","style","browser","toPixels","clipByValue","appendChild","dispose","from","to","selectLayersOptions","selectDataStatus","theme","loader","zIndex","drawer","Loader","Backdrop","CircularProgress","defaultSampleSizes","defaultLearningOptions","TrainNN","useState","setSampleSizes","setLearningOptions","dataStatus","useRef","useEffect","addModels","target","field","prevState","options","SelectComponent","labelId","size","defaultValue","FormControl","InputLabel","Select","map","atr","MenuItem","key","paddingBottom","marginBottom","edit","backgroundColor","yellowTableRow","fontStyle","buttons","background","CommentRow","React","memo","colSpan","children","TableRow","TableCell","align","EditedRow","editLayerParam","validateField","errors","onBlur","error","helperText","SimpleTableRow","layerId","currentLayer","editTableRow","hover","data-id","tabIndex","scope","data-field","CreateNNComponent","goToTrain","layersNumber","editLayersNumber","setEmptyLayers","noValidate","autoComplete","TableContainer","Table","TableHead","TableBody","entries","getEmptyLayerParameters","utils","validationRules","rule","number","isNaN","parseFloat","isFinite","delaultLayers","1","2","3","CreateNN","setLayersNumber","setLayers","setCurrentLayer","rules","setErrors","filed","filedRules","Array","isArray","fieldError","filter","validateFields","fieldsError","reduce","acc","e","every","object","useValidate","layersObject","currentTarget","detail","tagName","dataset","relatedTarget","contains","position","top","bottom","left","right","StartPageComponent","createNN","disabled","StartPage","Routes","path","exact","App","fetchMNISTData","img","Image","ctx","getContext","Promise","resolve","crossOrigin","onload","naturalWidth","naturalHeight","datasetBytesBuffer","ArrayBuffer","NUM_MNIST_DATASET_ELEMENTS","datasetBytesView","Float32Array","MNIST_IMAGE_SIZE","drawImage","imageData","getImageData","j","src","getTrainTestData","trainImages","testImages","getDataBatch","testIndices","shuffledTestIndex","initIndex","batch","nextBatch","getIndex","batchImagesArray","idx","image","set","tensor2d","selectAutoencoderModel","trainModelWorker","mainSaga","put","call","select","trainIndices","util","createShuffledIndices","controlData","container1","getElementById","container2","takeLatest","rootSaga","fork","modelsSaga","Boolean","window","location","hostname","match","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4b375979.chunk.js","sourcesContent":["const PREFIX = 'layers';\r\n\r\nexport const ADD_LAYERS_PARAMETERS = `${PREFIX}/ADD_LAYERS_PARAMETERS`;\r\nexport const addLayersParameters = (param) => ({\r\n  type: ADD_LAYERS_PARAMETERS,\r\n  param,\r\n});\r\n","export const EMPTY_ARRAY = [];\r\nexport const EMPTY_OBJECT = {};\r\n","/**\r\n * helps to create reducers like an objects (key is action type, value is action handler)\r\n * It's faster and cleaner than switch approach\r\n * @param initialState\r\n * @param handlers\r\n * @return {function}\r\n */\r\nexport const createReducer = (initialState, handlers) => (\r\n  state = initialState,\r\n  action\r\n) => (handlers[action.type] ? handlers[action.type](state, action) : state);\r\n\r\nexport default createReducer;\r\n","import { ADD_LAYERS_PARAMETERS } from 'modules/layers/actions';\r\nimport { EMPTY_ARRAY, EMPTY_OBJECT } from 'constants/common';\r\nimport { assoc } from 'ramda';\r\nimport createReducer from 'reducers/createReducer';\r\n\r\nconst initialState = {\r\n  parameters: EMPTY_ARRAY,\r\n  layers: EMPTY_OBJECT,\r\n};\r\n\r\nconst layersReducer = createReducer(initialState, {\r\n  [ADD_LAYERS_PARAMETERS]: (state, { param }) =>\r\n    assoc('parameters', Object.values(param), state),\r\n});\r\n\r\nexport default layersReducer;\r\n","const PREFIX = 'data';\r\n\r\nexport const FETCH_DATA = `${PREFIX}/FETCH_DATA`;\r\nexport const fetchData = () => ({\r\n  type: FETCH_DATA,\r\n});\r\n\r\nexport const FETCH_DATA_SUCCESS = `${PREFIX}/FETCH_DATA_SUCCESS`;\r\nexport const fetchDataSuccess = (data) => ({\r\n  type: FETCH_DATA_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const SET_STATUS = `${PREFIX}/SET_STATUS`;\r\nexport const setDataStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status,\r\n});\r\n","import createReducer from 'reducers/createReducer';\r\nimport { EMPTY_OBJECT } from 'constants/common';\r\nimport { assoc, mergeRight } from 'ramda';\r\nimport { STATUS_NOT_REQUESTED, STATUS_LOADING } from 'constants/status';\r\nimport {\r\n  FETCH_DATA,\r\n  FETCH_DATA_SUCCESS,\r\n  SET_STATUS,\r\n} from 'modules/data/actions';\r\n\r\nconst initialState = {\r\n  data: EMPTY_OBJECT,\r\n  status: STATUS_NOT_REQUESTED,\r\n};\r\n\r\nconst dataReducer = createReducer(initialState, {\r\n  [SET_STATUS]: (state, { status }) => assoc('status', status, state),\r\n  [FETCH_DATA]: (state) => assoc('status', STATUS_LOADING, state),\r\n  [FETCH_DATA_SUCCESS]: (state, { data }) =>\r\n    mergeRight(state, { status: STATUS_NOT_REQUESTED, data }),\r\n});\r\n\r\nexport default dataReducer;\r\n","export const STATUS_ERROR = 'ERROR';\r\nexport const STATUS_SUCCESS = 'SUCCESS';\r\nexport const STATUS_NOT_REQUESTED = 'NOT_REQUESTED';\r\nexport const STATUS_LOADING = 'LOADING';\r\n","const PREFIX = 'models';\r\n\r\nexport const ADD_MODELS = `${PREFIX}/ADD_MODELS`;\r\nexport const addModels = (models) => ({\r\n  type: ADD_MODELS,\r\n  models,\r\n});\r\n\r\nexport const TRAIN_MODEL = `${PREFIX}/TRAIN_MODEL`;\r\nexport const trainModel = (options) => ({\r\n  type: TRAIN_MODEL,\r\n  options,\r\n});\r\n","import createReducer from 'reducers/createReducer';\r\nimport { EMPTY_OBJECT } from 'constants/common';\r\nimport { ADD_MODELS } from 'modules/models/actions';\r\nimport { assoc } from 'ramda';\r\n\r\nconst initialState = {\r\n  models: EMPTY_OBJECT,\r\n};\r\n\r\nconst dataReducer = createReducer(initialState, {\r\n  [ADD_MODELS]: (state, { models }) => assoc('models', models, state),\r\n});\r\n\r\nexport default dataReducer;\r\n","const PREFIX = 'snackBar';\r\n\r\nexport const SHOW_SNACK_BAR = `${PREFIX}/SHOW_SNACK_BAR`;\r\nexport const showSnackBar = (snackBarType = '', messageText = '') => ({\r\n  type: SHOW_SNACK_BAR,\r\n  snackBarType,\r\n  messageText,\r\n});\r\n\r\nexport const HIDE_SNACK_BAR = `${PREFIX}/HIDE_SNACK_BAR`;\r\nexport const hideSnackBar = () => ({\r\n  type: HIDE_SNACK_BAR,\r\n});\r\n","import createReducer from 'reducers/createReducer';\r\nimport { mergeRight, always } from 'ramda';\r\nimport { SHOW_SNACK_BAR, HIDE_SNACK_BAR } from 'modules/snackBar/actions';\r\n\r\nconst initialState = { snackBarType: '', messageText: '' };\r\n\r\nconst modalsReducer = createReducer(initialState, {\r\n  [SHOW_SNACK_BAR]: (state, { snackBarType = '', messageText = '' }) =>\r\n    mergeRight(state, {\r\n      snackBarType,\r\n      messageText,\r\n    }),\r\n  [HIDE_SNACK_BAR]: always(initialState),\r\n});\r\n\r\nexport default modalsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport layers from 'modules/layers/reducers';\r\nimport data from 'modules/data/reducers';\r\nimport models from 'modules/models/reducers';\r\nimport snackBar from 'modules/snackBar/reducers';\r\n\r\nconst reducer = combineReducers({\r\n  layers,\r\n  data,\r\n  models,\r\n  snackBar,\r\n});\r\n\r\nexport default reducer;\r\n","export const selectSnackBar = (state) => state.snackBar;\r\n","export const SNACK_BAR_ERROR = 'error';\r\nexport const SNACK_BAR_SUCCESS = 'success';\r\n\r\nexport const commonMessages = {\r\n  [SNACK_BAR_ERROR]: 'Something wrong',\r\n  [SNACK_BAR_SUCCESS]: 'Successful',\r\n};\r\n\r\nexport const SNACK_BAR_TIMEOUT = 5000;\r\n","import React from 'react';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nexport const SnackBarComponent = ({ timeout, severity, message, onClose }) => (\r\n  <Snackbar\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'left',\r\n    }}\r\n    open\r\n    autoHideDuration={timeout}\r\n    onClose={onClose}\r\n  >\r\n    <Alert severity={severity} variant=\"filled\" onClose={onClose}>\r\n      {message}\r\n    </Alert>\r\n  </Snackbar>\r\n);\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSnackBar } from 'modules/snackBar/selectors';\r\nimport { commonMessages, SNACK_BAR_TIMEOUT } from 'constants/snackBar';\r\nimport { SnackBarComponent } from 'components/common/SnackBar';\r\nimport { hideSnackBar } from 'modules/snackBar/actions';\r\n\r\n/**\r\n * SnackBar container.\r\n * Provides brief messages about app processes.\r\n */\r\nexport const SnackBar = () => {\r\n  const dispatch = useDispatch();\r\n  const { snackBarType, messageText } = useSelector(selectSnackBar);\r\n\r\n  // The reason prop is used to ignore click outside SnackBar\r\n  const onClose = useCallback(\r\n    (_, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      dispatch(hideSnackBar());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  if (!snackBarType) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <SnackBarComponent\r\n      timeout={SNACK_BAR_TIMEOUT}\r\n      severity={snackBarType}\r\n      message={messageText || commonMessages[snackBarType]}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles({\r\n  wrapper: {\r\n    padding: '40px 80px',\r\n  },\r\n  '@media (min-width: 2140px)': {\r\n    wrapper: {\r\n      maxWidth: 1980,\r\n      margin: '40px auto',\r\n      boxSizing: 'border-box',\r\n    },\r\n  },\r\n});\r\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  container: {\n    margin: '40px 80px',\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: '40px',\n  },\n  settings: {\n    display: 'flex',\n    justifyContent: 'space-around',\n  },\n  form: {\n    marginTop: '20px',\n    display: 'flex',\n    '& > *': {\n      marginRight: '15px',\n    },\n  },\n  layers: {\n    marginTop: '20px',\n  },\n  table: {\n    maxWidth: 650,\n    marginTop: '20px',\n  },\n  text: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport { useStyles } from './styles';\r\n\r\nexport const TrainNNComponent = ({\r\n  testSampleSize = '',\r\n  trainSampleSize = '',\r\n  dataSize = 0,\r\n  editSampleSize,\r\n  editLearningOption,\r\n  batchSize = '',\r\n  epochs = '',\r\n  trainNN,\r\n}) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Container className={styles.section} maxWidth={false}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"h2\" variant=\"h5\">\r\n              Настройка данных для обучения\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4} container>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"subtitle1\"\r\n              color=\"textPrimary\"\r\n              className={styles.text}\r\n            >\r\n              Всего доступно {dataSize} элементов\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              label=\"Размер тестовой выборки\"\r\n              id=\"test\"\r\n              variant=\"outlined\"\r\n              value={testSampleSize}\r\n              onChange={editSampleSize}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <TextField\r\n              label=\"Размер тренировочной выборки\"\r\n              variant=\"outlined\"\r\n              id=\"train\"\r\n              value={trainSampleSize}\r\n              onChange={editSampleSize}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container className={styles.section} maxWidth={false}>\r\n        <Typography component=\"h2\" variant=\"h5\" paragraph>\r\n          Настройка параметров обучения\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <TextField\r\n              label=\"Количество эпох\"\r\n              id=\"epochs\"\r\n              onChange={editLearningOption}\r\n              value={epochs}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <TextField\r\n              label=\"Размер партии (batch)\"\r\n              id=\"batchSize\"\r\n              onChange={editLearningOption}\r\n              variant=\"outlined\"\r\n              value={batchSize}\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={4} container>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              onClick={trainNN}\r\n            >\r\n              Обучить нейронную сеть\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: '40px',\n  },\n});\n","import React from 'react';\nimport { Container, Typography, Button, Grid } from '@material-ui/core';\nimport { useStyles } from './styles';\n\nexport const TestNNComponent = ({\n  initImageContainer,\n  predsImageContainer,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <Container className={styles.section} maxWidth={false}>\n      <Typography component=\"h2\" variant=\"h5\" paragraph>\n        Проверка работы нейронной сети\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Button variant=\"contained\" color=\"primary\" fullWidth>\n            Проверить\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={6} id=\"initImage\" ref={initImageContainer}>\n          <Typography component=\"h2\" variant=\"h6\" paragraph>\n            Начальные изображения\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} id=\"predsImage\" ref={predsImageContainer}>\n          <Typography component=\"h2\" variant=\"h6\" paragraph>\n            После НС\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n","import React from 'react';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\n/**\r\n * Button is used to redirect to the previous page\r\n */\r\nexport const BackButtonComponent = ({ handleClick }) => (\r\n  <IconButton aria-label=\"back\" onClick={handleClick}>\r\n    <ArrowBack />\r\n  </IconButton>\r\n);\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BackButtonComponent } from 'components/common/BackButton';\r\n\r\n/**\r\n * BackButton container\r\n */\r\nexport const BackButton = ({ redirectUrl }) => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (redirectUrl) {\r\n      history.push(redirectUrl);\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  }, [history, redirectUrl]);\r\n\r\n  return <BackButtonComponent handleClick={handleClick} />;\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { BackButton } from 'containers/common/BackButton';\r\nimport { useStyles } from './styles';\r\n\r\nexport const HeaderComponent = ({ text = '' }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <div className={styles.header}>\r\n      <BackButton />\r\n      <Typography component=\"h1\" variant=\"h4\">\r\n        {text}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { TrainNNComponent } from 'components/TrainNNConponent';\r\nimport { TestNNComponent } from 'components/TestNNComponent';\r\nimport { HeaderComponent } from 'components/common/Header';\r\nexport const NNComponent = ({ sampleSizes, learningOptions, ...props }) => (\r\n  <>\r\n    <HeaderComponent text=\"Обучение и тестирование нейронной сети\" />\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={7}>\r\n        <TrainNNComponent\r\n          testSampleSize={sampleSizes.test}\r\n          trainSampleSize={sampleSizes.train}\r\n          epochs={learningOptions.epochs}\r\n          batchSize={learningOptions.batchSize}\r\n          {...props}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={7}>\r\n        <TestNNComponent {...props} />\r\n      </Grid>\r\n    </Grid>\r\n  </>\r\n);\r\n","import { layers, input, model, tidy, browser } from '@tensorflow/tfjs';\r\nimport { show } from '@tensorflow/tfjs-vis';\r\n\r\nexport const createEncoder = (layersOptions) => {\r\n  const inputLayer = input({ shape: [28, 28, 1] });\r\n  const flattenImg = layers.flatten().apply(inputLayer);\r\n  const stackOfLayers = createStackOfLayers(\r\n    flattenImg,\r\n    layersOptions,\r\n    0,\r\n    (index) => index + 1\r\n  );\r\n  const encoder = model({\r\n    inputs: inputLayer,\r\n    outputs: stackOfLayers,\r\n    name: 'encoder',\r\n  });\r\n  return { inputLayer, encoder };\r\n};\r\n\r\nexport const createDecoder = (layersOptions) => {\r\n  const lastIndex = layersOptions.length - 1;\r\n  const inputLayer = input({ shape: Number(layersOptions[lastIndex].units) });\r\n  const stackOfLayers = createStackOfLayers(\r\n    inputLayer,\r\n    layersOptions,\r\n    lastIndex - 1,\r\n    (index) => index - 1\r\n  );\r\n  const flattenDecoded = layers\r\n    .dense({ units: 28 * 28, activation: 'relu' })\r\n    .apply(stackOfLayers);\r\n  const decoderLayers = layers\r\n    .reshape({ targetShape: [28, 28, 1] })\r\n    .apply(flattenDecoded);\r\n  const decoder = model({\r\n    inputs: inputLayer,\r\n    outputs: decoderLayers,\r\n    name: 'decoder',\r\n  });\r\n  return { decoder, inputLayer };\r\n};\r\n\r\nexport const createAutoencoder = (layersOptions) => {\r\n  const { encoder, inputLayer } = createEncoder(layersOptions);\r\n  const { decoder } = createDecoder(layersOptions);\r\n  const autoencoder = model({\r\n    inputs: inputLayer,\r\n    outputs: decoder.apply(encoder.apply(inputLayer)),\r\n    name: 'autoencoder',\r\n  });\r\n  console.log('encoder');\r\n  encoder.compile({ optimizer: 'adam', loss: 'binaryCrossentropy' });\r\n  encoder.summary();\r\n  console.log('decoder');\r\n  decoder.compile({ optimizer: 'adam', loss: 'binaryCrossentropy' });\r\n  decoder.summary();\r\n  console.log('autoencoder');\r\n  autoencoder.compile({ optimizer: 'adam', loss: 'binaryCrossentropy' });\r\n  autoencoder.summary();\r\n  return { autoencoder, encoder, decoder };\r\n};\r\n\r\nexport const createDenseLayer = ({ units, act }) =>\r\n  layers.dense({ units: Number(units), activation: act });\r\n\r\nexport const createStackOfLayers = (\r\n  inputLayer,\r\n  layersOptions,\r\n  index,\r\n  getNewIndex\r\n) => {\r\n  const layerOptions = layersOptions[index];\r\n  if (layerOptions && Object.values(layerOptions).length) {\r\n    const layer = createDenseLayer(layerOptions).apply(inputLayer);\r\n    const newIndex = getNewIndex(index);\r\n    return createStackOfLayers(layer, layersOptions, newIndex, getNewIndex);\r\n  }\r\n  return inputLayer;\r\n};\r\n\r\nexport const trainModel = ({ nn, trainData, testData, epochs, batchSize }) => {\r\n  const metrics = ['loss', 'val_loss', 'acc', 'val_acc'];\r\n  const container = { name: 'Model Training' };\r\n  const fitCallbacks = show.fitCallbacks(container, metrics);\r\n\r\n  return nn.fit(trainData, trainData, {\r\n    batchSize,\r\n    validationData: [testData, testData],\r\n    epochs,\r\n    shuffle: true,\r\n    callbacks: fitCallbacks,\r\n    // callbacks: {\r\n    //   onEpochEnd: (epoch, log) => {\r\n    //     console.log('epoch', epoch, 'log', log);\r\n    //   },\r\n    // },\r\n  });\r\n};\r\n\r\nexport async function doPrediction(currentModel, data) {\r\n  const preds = currentModel.predict(data);\r\n  return preds;\r\n}\r\n\r\nexport async function display(examples, container) {\r\n  // Количество изображений, которое нужно вывести на экран\r\n  const numExamples = examples.shape[0];\r\n  // Create a canvas element to render each example\r\n  for (let i = 0; i < numExamples; i += 1) {\r\n    const imageTensor = tidy(() =>\r\n      // Reshape the image to 28x28 px\r\n      examples.slice([i, 0], [1, examples.shape[1]]).reshape([28, 28, 1])\r\n    );\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 28;\r\n    canvas.height = 28;\r\n    canvas.style = 'margin: 4px;';\r\n    // eslint-disable-next-line\r\n    await browser.toPixels(imageTensor.clipByValue(0, 1), canvas);\r\n    container.appendChild(canvas);\r\n\r\n    imageTensor.dispose();\r\n  }\r\n}\r\n","export const selectLayersOptions = ({ layers }) => layers.parameters;\r\n","import { useState, useCallback } from 'react';\r\nimport { isNumeric } from 'helpers/common';\r\n\r\nexport const isRequired = () => ({\r\n  rule: (value) => !!value,\r\n  message: 'Это поле обязательно для заполнения',\r\n});\r\n\r\nexport const inRange = (from, to) => ({\r\n  rule: (value) => Number(value) >= Number(from) && Number(value) <= Number(to),\r\n  message: `Значение должно быть больше ${from} и меньше ${to}`,\r\n});\r\n\r\nexport const isNumber = () => ({\r\n  rule: (value) => isNumeric(value),\r\n  message: 'Значение должно быть числом',\r\n});\r\n\r\nexport const useValidate = (rules) => {\r\n  const [errors, setErrors] = useState({});\r\n  const validateField = ({ target }) => {\r\n    const filed = target.id || target.name;\r\n    const { value } = target;\r\n    const filedRules = rules[filed];\r\n    console.log('filed', filed, 'rules', rules, 'value', value);\r\n    if (Array.isArray(rules[filed])) {\r\n      const fieldError =\r\n        filedRules\r\n          .map(({ rule, message }) => (rule(value) ? '' : message))\r\n          .filter((error) => !!error)[0] || '';\r\n\r\n      setErrors((prevState) => ({\r\n        ...prevState,\r\n        [filed]: fieldError,\r\n      }));\r\n    }\r\n  };\r\n  const validateFields = (values) => {\r\n    const fieldsError = Object.entries(rules).map(([field, fieldRules]) => {\r\n      const fieldError =\r\n        fieldRules\r\n          .map(({ rule, message }) => (rule(values[field]) ? '' : message))\r\n          .filter((error) => !!error)[0] || '';\r\n      return { [field]: fieldError };\r\n    });\r\n    setErrors(fieldsError.reduce((acc, e) => ({ ...acc, ...e }), {}));\r\n    return fieldsError.every((object) => !Object.values(object)[0]);\r\n  };\r\n  return {\r\n    errors,\r\n    validateField: useCallback(validateField, [rules, setErrors]),\r\n    validateFields: useCallback(validateFields, [setErrors]),\r\n  };\r\n};\r\n","export const selectDataStatus = (state) => state.data.status;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  loader: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { CircularProgress, Backdrop } from '@material-ui/core';\r\nimport { useStyles } from './styles';\r\n\r\nexport const Loader = () => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={styles.loader} open>\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NNComponent } from 'components/NNComponent';\r\nimport { NUM_MNIST_DATASET_ELEMENTS } from 'constants/data';\r\nimport { createAutoencoder } from 'helpers/models';\r\nimport { selectLayersOptions } from 'modules/layers/selectors';\r\nimport { addModels, trainModel } from 'modules/models/actions';\r\nimport { selectDataStatus } from 'modules/data/selectors';\r\nimport { STATUS_LOADING } from 'constants/status';\r\nimport { Loader } from 'components/common/Loader';\r\n\r\nconst defaultSampleSizes = {\r\n  train: 5500,\r\n  test: 1000,\r\n};\r\n\r\nconst defaultLearningOptions = {\r\n  batchSize: 250,\r\n  epochs: 50,\r\n};\r\n/**\r\n * TODO\r\n * два раза делается запрос картинок. нужно поправить\r\n */\r\nexport const TrainNN = () => {\r\n  const [sampleSizes, setSampleSizes] = useState(defaultSampleSizes);\r\n  const [learningOptions, setLearningOptions] = useState(\r\n    defaultLearningOptions\r\n  );\r\n  const layersOptions = useSelector(selectLayersOptions);\r\n  const dispatch = useDispatch();\r\n  const dataStatus = useSelector(selectDataStatus);\r\n  const initImageContainer = useRef(null);\r\n  const predsImageContainer = useRef(null);\r\n  useEffect(() => {\r\n    if (layersOptions.length) {\r\n      const models = createAutoencoder(layersOptions);\r\n      dispatch(addModels(models));\r\n    }\r\n  }, [layersOptions, dispatch]);\r\n  const editSampleSize = useCallback(\r\n    ({ target }) => {\r\n      const field = target.id || target.name;\r\n      const { value } = target;\r\n      setSampleSizes((prevState) => ({ ...prevState, [field]: value }));\r\n    },\r\n    [setSampleSizes]\r\n  );\r\n  const editLearningOption = useCallback(\r\n    ({ target }) => {\r\n      const field = target.id || target.name;\r\n      const { value } = target;\r\n      setLearningOptions((prevState) => ({ ...prevState, [field]: value }));\r\n    },\r\n    [setLearningOptions]\r\n  );\r\n  const trainNN = useCallback(() => {\r\n    dispatch(trainModel({ sampleSizes, learningOptions }));\r\n  }, [dispatch, sampleSizes, learningOptions]);\r\n  return (\r\n    <>\r\n      <NNComponent\r\n        dataSize={NUM_MNIST_DATASET_ELEMENTS}\r\n        sampleSizes={sampleSizes}\r\n        editSampleSize={editSampleSize}\r\n        learningOptions={learningOptions}\r\n        editLearningOption={editLearningOption}\r\n        trainNN={trainNN}\r\n        initImageContainer={initImageContainer}\r\n        predsImageContainer={predsImageContainer}\r\n      />\r\n      {dataStatus === STATUS_LOADING && <Loader />}\r\n    </>\r\n  );\r\n};\r\n","export const MNIST_IMAGE_SIZE = 784;\r\n\r\nexport const NUM_MNIST_DATASET_ELEMENTS = 65000;\r\n\r\nexport const NUM_MNIST_TRAIN_ELEMENTS = 55000;\r\nexport const NUM_MNIST_TEST_ELEMENTS =\r\n  NUM_MNIST_DATASET_ELEMENTS - NUM_MNIST_TRAIN_ELEMENTS;\r\n","import React from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\n\r\nexport const SelectComponent = ({\r\n  values = [],\r\n  labelId = '',\r\n  label = '',\r\n  size = 'medium',\r\n  fullWidth = false,\r\n  defaultValue = '',\r\n  ...props\r\n}) => (\r\n  <FormControl variant=\"outlined\" fullWidth={fullWidth} size={size}>\r\n    <InputLabel id={labelId}>{label}</InputLabel>\r\n    <Select\r\n      labelId={labelId}\r\n      label={label}\r\n      defaultValue={defaultValue}\r\n      {...props}\r\n    >\r\n      {values.map(({ value, text, ...atr }) => (\r\n        <MenuItem key={value} value={value} {...atr}>\r\n          {text || value}\r\n        </MenuItem>\r\n      ))}\r\n    </Select>\r\n  </FormControl>\r\n);\r\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n  },\n  container: {\n    paddingTop: '24px',\n    paddingBottom: '24px',\n  },\n  form: {\n    marginBottom: '20px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  table: {\n    marginBottom: '20px',\n    '& th': {\n      width: '40%',\n    },\n    '& th:first-child': {\n      width: '20%',\n    },\n  },\n  edit: {\n    backgroundColor: 'rgba(0, 0, 0, 0.04)',\n  },\n  yellowTableRow: {\n    backgroundColor: '#fffcdd',\n    fontStyle: 'italic',\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'space-around',\n  },\n  padding: {\n    padding: '0 16px !important',\n  },\n  background: {\n    backgroundColor: '#fff',\n  },\n});\n","import React from 'react';\r\nimport {\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { SelectComponent } from 'components/common/Select';\r\nimport { HeaderComponent } from 'components/common/Header';\r\nimport { useStyles } from './styles';\r\n\r\nconst CommentRow = React.memo(({ colSpan, children }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <TableRow className={styles.yellowTableRow}>\r\n      <TableCell align=\"center\" colSpan={colSpan}>\r\n        <Typography variant=\"body2\">{children}</Typography>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n});\r\n\r\nconst EditedRow = React.memo(\r\n  ({ parameters, editLayerParam, validateField, errors }) => {\r\n    const styles = useStyles();\r\n    const activationFunction = [\r\n      {\r\n        value: 'relu',\r\n        text: 'relu',\r\n      },\r\n      {\r\n        value: 'linear',\r\n        text: 'linear',\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <TableCell padding=\"none\" className={styles.padding}>\r\n          <TextField\r\n            label=\"Количество нейронов\"\r\n            variant=\"outlined\"\r\n            name=\"units\"\r\n            id=\"units\"\r\n            value={parameters.units}\r\n            onChange={editLayerParam}\r\n            onBlur={validateField}\r\n            size=\"small\"\r\n            fullWidth\r\n            className={styles.background}\r\n            error={!!errors.units}\r\n            helperText={errors.units}\r\n          />\r\n        </TableCell>\r\n        <TableCell padding=\"none\" className={styles.padding}>\r\n          <SelectComponent\r\n            label=\"Функция активации\"\r\n            name=\"act\"\r\n            id=\"act\"\r\n            labelId=\"activation-function\"\r\n            values={activationFunction}\r\n            value={parameters.act}\r\n            onChange={editLayerParam}\r\n            onBlur={validateField}\r\n            size=\"small\"\r\n            fullWidth\r\n            className={styles.background}\r\n            // error={!!errors.act}\r\n            // helperText={errors.act}\r\n          />\r\n        </TableCell>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nconst SimpleTableRow = React.memo(\r\n  ({\r\n    layerId,\r\n    editLayerParam,\r\n    currentLayer,\r\n    parameters,\r\n    onBlur,\r\n    editTableRow,\r\n    validateField,\r\n    errors,\r\n  }) => {\r\n    const styles = useStyles();\r\n\r\n    return (\r\n      <TableRow\r\n        hover\r\n        onClick={editTableRow}\r\n        onBlur={onBlur}\r\n        data-id={layerId}\r\n        className={currentLayer === layerId ? styles.edit : ''}\r\n        tabIndex=\"0\"\r\n      >\r\n        <TableCell scope=\"row\">{layerId}</TableCell>\r\n        {currentLayer === layerId ? (\r\n          <EditedRow\r\n            parameters={parameters}\r\n            editLayerParam={editLayerParam}\r\n            validateField={validateField}\r\n            errors={errors}\r\n          />\r\n        ) : (\r\n          <>\r\n            <TableCell data-id={layerId} data-field=\"units\">\r\n              {parameters.units}\r\n            </TableCell>\r\n            <TableCell data-id={layerId} data-field=\"act\">\r\n              {parameters.act}\r\n            </TableCell>\r\n          </>\r\n        )}\r\n      </TableRow>\r\n    );\r\n  }\r\n);\r\n\r\nexport const CreateNNComponent = React.memo(\r\n  ({\r\n    goToTrain,\r\n    layersNumber,\r\n    editLayersNumber,\r\n    layers,\r\n    setEmptyLayers,\r\n    currentLayer,\r\n    editLayerParam,\r\n    onBlur,\r\n    goBack,\r\n    editTableRow,\r\n    errors,\r\n    validateField,\r\n  }) => {\r\n    const styles = useStyles();\r\n    console.log('errors', errors);\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <HeaderComponent text=\"Настройка слоев нейронной сети\" />\r\n        <Container maxWidth=\"md\" className={styles.container}>\r\n          <form noValidate autoComplete=\"off\" className={styles.form}>\r\n            <TextField\r\n              label=\"Количество слоев\"\r\n              variant=\"outlined\"\r\n              defaultValue={layersNumber}\r\n              onBlur={editLayersNumber}\r\n              size=\"small\"\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={setEmptyLayers}\r\n            >\r\n              Создать заготовленные слои\r\n            </Button>\r\n          </form>\r\n          <TableContainer className={styles.table}>\r\n            <Table aria-label=\"layers\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Номер слоя</TableCell>\r\n                  <TableCell>Количество нейронов</TableCell>\r\n                  <TableCell>Фунция активации</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <CommentRow colSpan={3}>\r\n                  Для изменения параметров слоя два раза нажмите на него\r\n                </CommentRow>\r\n                {Object.entries(layers).map(([layerId, parameters]) => (\r\n                  <SimpleTableRow\r\n                    key={layerId}\r\n                    layerId={layerId}\r\n                    parameters={parameters}\r\n                    currentLayer={currentLayer}\r\n                    editLayerParam={editLayerParam}\r\n                    onBlur={onBlur}\r\n                    editTableRow={editTableRow}\r\n                    validateField={validateField}\r\n                    errors={errors}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <div className={styles.buttons}>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={goBack}>\r\n              На главную\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={goToTrain}>\r\n              Создать нейронную сеть\r\n            </Button>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","export const getEmptyLayerParameters = (layerId = '') => ({\r\n  id: layerId,\r\n  utils: '',\r\n  act: '',\r\n});\r\n","import { isRequired, isNumber, inRange } from 'helpers/validations';\r\n\r\nexport const validationRules = {\r\n  units: [isRequired(), isNumber(), inRange(0, 10000)],\r\n  act: [isRequired()],\r\n};\r\n","export const isNumeric = (number) =>\r\n  !Number.isNaN(parseFloat(number)) &&\r\n  !Number.isNaN(Number(number)) &&\r\n  Number.isFinite(Number(number));\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TRAIN_NN_URL, ROOT } from 'constants/api';\r\nimport { CreateNNComponent } from 'components/CreateNNComponent';\r\nimport { getEmptyLayerParameters } from 'helpers/layers';\r\nimport { addLayersParameters } from 'modules/layers/actions';\r\nimport { useValidate } from 'helpers/validations';\r\nimport { validationRules } from './validationRules';\r\n\r\nconst defaultLayersNumber = 3;\r\nconst delaultLayers = {\r\n  1: {\r\n    units: 192,\r\n    act: 'relu',\r\n  },\r\n  2: {\r\n    units: 128,\r\n    act: 'relu',\r\n  },\r\n  3: {\r\n    units: 64,\r\n    act: 'linear',\r\n  },\r\n};\r\n\r\n// const validationRules = {};\r\n\r\nexport const CreateNN = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [layersNumber, setLayersNumber] = useState(defaultLayersNumber);\r\n  const [layers, setLayers] = useState(delaultLayers);\r\n  const [currentLayer, setCurrentLayer] = useState(null);\r\n  const { errors, validateField, validateFields } = useValidate(\r\n    validationRules\r\n  );\r\n\r\n  const goToTrain = useCallback(() => {\r\n    dispatch(addLayersParameters(layers));\r\n    history.push(TRAIN_NN_URL);\r\n  }, [history, dispatch, layers]);\r\n\r\n  const goBack = useCallback(() => {\r\n    history.push(ROOT);\r\n  }, [history]);\r\n\r\n  const editLayersNumber = useCallback(\r\n    ({ target }) => setLayersNumber(target.value),\r\n    [setLayersNumber]\r\n  );\r\n\r\n  const setEmptyLayers = useCallback(() => {\r\n    const layersObject = {};\r\n    for (let i = 0; i < layersNumber; i += 1) {\r\n      const layerId = i + 1;\r\n      layersObject[layerId] = getEmptyLayerParameters(layerId);\r\n    }\r\n    setLayers(layersObject);\r\n  }, [layersNumber, setLayers]);\r\n\r\n  const editTableRow = useCallback(\r\n    ({ currentTarget, detail }) => {\r\n      const {\r\n        tagName,\r\n        dataset: { id: layerId },\r\n      } = currentTarget;\r\n      if (detail === 2 && tagName === 'TR') {\r\n        setCurrentLayer(layerId);\r\n      }\r\n    },\r\n    [setCurrentLayer]\r\n  );\r\n\r\n  const editLayerParam = useCallback(\r\n    ({ target }) => {\r\n      const field = target.name || target.id;\r\n      const { value } = target;\r\n      if (field && currentLayer) {\r\n        setLayers((prevState) => ({\r\n          ...prevState,\r\n          [currentLayer]: {\r\n            ...prevState[currentLayer],\r\n            [field]: value,\r\n          },\r\n        }));\r\n      }\r\n    },\r\n    [setLayers, currentLayer]\r\n  );\r\n\r\n  const onBlur = useCallback(\r\n    ({ relatedTarget, currentTarget }) => {\r\n      const { tagName } = relatedTarget || {};\r\n      if (\r\n        !currentTarget.contains(relatedTarget) &&\r\n        tagName !== 'LI' &&\r\n        currentLayer &&\r\n        validateFields(layers[currentLayer])\r\n      ) {\r\n        setCurrentLayer(null);\r\n      }\r\n    },\r\n    [setCurrentLayer, validateFields, currentLayer, layers]\r\n  );\r\n\r\n  return (\r\n    <CreateNNComponent\r\n      goToTrain={goToTrain}\r\n      goBack={goBack}\r\n      layers={layers}\r\n      layersNumber={layersNumber}\r\n      editLayersNumber={editLayersNumber}\r\n      setEmptyLayers={setEmptyLayers}\r\n      currentLayer={currentLayer}\r\n      editLayerParam={editLayerParam}\r\n      onBlur={onBlur}\r\n      editTableRow={editTableRow}\r\n      errors={errors}\r\n      validateField={validateField}\r\n    />\r\n  );\r\n};\r\n","export const ROOT = 'Autoencoder/';\r\nexport const CREATE_NN_URL = 'Autoencoder/create';\r\nexport const TRAIN_NN_URL = 'Autoencoder/train';\r\nexport const TEST_NN_URL = 'Autoencoder/test';\r\nexport const MNIST_DATA_URL =\r\n  'https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png';\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  container: {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '50%',\r\n    justifyContent: 'space-around',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Typography } from '@material-ui/core';\r\nimport { useStyles } from './styles';\r\n\r\nexport const StartPageComponent = ({ createNN }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Typography variant=\"h3\" component=\"h1\" paragraph>\r\n        Добро пожаловать\r\n      </Typography>\r\n      <div className={styles.buttons}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={createNN}\r\n        >\r\n          Создать новую нейронную сеть\r\n        </Button>\r\n        <Button variant=\"contained\" size=\"large\" disabled>\r\n          Загрузить готовую нейронную сеть\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nStartPageComponent.propTypes = {\r\n  createNN: PropTypes.func.isRequired,\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CREATE_NN_URL } from '../../constants/api';\r\nimport { StartPageComponent } from '../../components/StartPage';\r\n\r\nexport const StartPage = () => {\r\n  const history = useHistory();\r\n  const createNN = useCallback(() => {\r\n    history.push(CREATE_NN_URL);\r\n  }, [history]);\r\n\r\n  return <StartPageComponent createNN={createNN} />;\r\n};\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { TrainNN } from 'containers/TrainNN';\r\nimport {\r\n  CREATE_NN_URL,\r\n  TRAIN_NN_URL,\r\n  TEST_NN_URL,\r\n  ROOT,\r\n} from '../constants/api';\r\nimport { CreateNN } from '../containers/CreateNN';\r\nimport { TestNNComponent } from './TestNNComponent';\r\nimport { StartPage } from '../containers/StartPage';\r\n\r\nexport const Routes = () => (\r\n  <Switch>\r\n    <Route path={ROOT} exact component={StartPage} />\r\n    <Route path={CREATE_NN_URL} exact component={CreateNN} />\r\n    <Route path={TRAIN_NN_URL} exact component={TrainNN} />\r\n    <Route path={TEST_NN_URL} exact component={TestNNComponent} />\r\n  </Switch>\r\n);\r\n","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { SnackBar } from 'containers/common/SnackBar';\r\nimport { useStyles } from './styles';\r\nimport { Routes } from './components/Routes';\r\n\r\nfunction App() {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <SnackBar />\r\n      <div className={styles.wrapper}>\r\n        <BrowserRouter>\r\n          <Routes />\r\n        </BrowserRouter>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { MNIST_DATA_URL } from 'constants/api';\r\nimport {\r\n  MNIST_IMAGE_SIZE,\r\n  NUM_MNIST_DATASET_ELEMENTS,\r\n  NUM_MNIST_TRAIN_ELEMENTS,\r\n  NUM_MNIST_TEST_ELEMENTS,\r\n} from 'constants/data';\r\nimport { util, tensor2d, tidy } from '@tensorflow/tfjs';\r\n\r\nexport const fetchMNISTData = () => {\r\n  const img = new Image();\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d');\r\n  return new Promise((resolve) => {\r\n    img.crossOrigin = '';\r\n    img.onload = () => {\r\n      img.width = img.naturalWidth;\r\n      img.height = img.naturalHeight;\r\n\r\n      const datasetBytesBuffer = new ArrayBuffer(\r\n        NUM_MNIST_DATASET_ELEMENTS * MNIST_IMAGE_SIZE * 4\r\n      );\r\n\r\n      const chunkSize = 5000;\r\n      canvas.width = img.width;\r\n      canvas.height = chunkSize;\r\n\r\n      for (let i = 0; i < NUM_MNIST_DATASET_ELEMENTS / chunkSize; i += 1) {\r\n        const datasetBytesView = new Float32Array(\r\n          datasetBytesBuffer,\r\n          i * MNIST_IMAGE_SIZE * chunkSize * 4,\r\n          MNIST_IMAGE_SIZE * chunkSize\r\n        );\r\n        ctx.drawImage(\r\n          img,\r\n          0,\r\n          i * chunkSize,\r\n          img.width,\r\n          chunkSize,\r\n          0,\r\n          0,\r\n          img.width,\r\n          chunkSize\r\n        );\r\n\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n        for (let j = 0; j < imageData.data.length / 4; j += 1) {\r\n          // All channels hold an equal value since the image is grayscale, so\r\n          // just read the red channel.\r\n          datasetBytesView[j] = imageData.data[j * 4] / 255;\r\n        }\r\n      }\r\n      // this.datasetImages = new Float32Array(datasetBytesBuffer);\r\n\r\n      resolve(new Float32Array(datasetBytesBuffer));\r\n    };\r\n    img.src = MNIST_DATA_URL;\r\n  });\r\n};\r\n\r\n/**\r\n * Create shuffled indices into the train/test set for when we select a\r\n * random dataset element for training / validation.\r\n */\r\nexport const getIndices = () => {\r\n  const trainIndices = util.createShuffledIndices(NUM_MNIST_TRAIN_ELEMENTS);\r\n  const testIndices = util.createShuffledIndices(NUM_MNIST_TEST_ELEMENTS);\r\n  return { trainIndices, testIndices };\r\n};\r\n\r\n/**\r\n * Slice the the images and labels into train and test sets.\r\n */\r\nexport const getTrainTestData = (data) => {\r\n  const trainImages = data.slice(\r\n    0,\r\n    MNIST_IMAGE_SIZE * NUM_MNIST_TRAIN_ELEMENTS\r\n  );\r\n  const testImages = data.slice(MNIST_IMAGE_SIZE * NUM_MNIST_TRAIN_ELEMENTS);\r\n  return { trainImages, testImages };\r\n};\r\n\r\nexport const getDataBatch = ({\r\n  batchSize,\r\n  testImages,\r\n  testIndices,\r\n  initIndex,\r\n}) => {\r\n  let shuffledTestIndex = initIndex;\r\n  const dataBatch = tidy(() => {\r\n    const data = nextBatch(+batchSize, testImages, () => {\r\n      shuffledTestIndex = (shuffledTestIndex + 1) % testIndices.length;\r\n      return testIndices[shuffledTestIndex];\r\n    });\r\n    return data.reshape([+batchSize, 28, 28, 1]);\r\n  });\r\n  return {\r\n    batch: dataBatch,\r\n    shuffledTestIndex,\r\n  };\r\n};\r\n\r\nconst nextBatch = (batchSize, data, getIndex) => {\r\n  const batchImagesArray = new Float32Array(batchSize * MNIST_IMAGE_SIZE);\r\n\r\n  for (let i = 0; i < batchSize; i += 1) {\r\n    const idx = getIndex();\r\n    const image = data.slice(\r\n      idx * MNIST_IMAGE_SIZE,\r\n      idx * MNIST_IMAGE_SIZE + MNIST_IMAGE_SIZE\r\n    );\r\n    batchImagesArray.set(image, i * MNIST_IMAGE_SIZE);\r\n  }\r\n  return tensor2d(batchImagesArray, [batchSize, MNIST_IMAGE_SIZE]);\r\n};\r\n","export const selectAutoencoderModel = ({ models }) => models.models.autoencoder;\r\n","import { TRAIN_MODEL } from 'modules/models/actions';\r\nimport { setDataStatus } from 'modules/data/actions';\r\nimport { call, takeLatest, put, select } from 'redux-saga/effects';\r\nimport {\r\n  fetchMNISTData,\r\n  getIndices,\r\n  getTrainTestData,\r\n  getDataBatch,\r\n} from 'helpers/data';\r\nimport { STATUS_LOADING, STATUS_NOT_REQUESTED } from 'constants/status';\r\nimport { selectAutoencoderModel } from 'modules/models/selectors';\r\nimport { trainModel, doPrediction, display } from 'helpers/models';\r\n\r\n/**\r\n * Использовать статус у данных, а не модели\r\n */\r\nfunction* trainModelWorker({ options }) {\r\n  const { learningOptions, sampleSizes } = options;\r\n  yield put(setDataStatus(STATUS_LOADING));\r\n  const data = yield call(fetchMNISTData);\r\n  yield put(setDataStatus(STATUS_NOT_REQUESTED));\r\n  const model = yield select(selectAutoencoderModel);\r\n  const { trainIndices, testIndices } = getIndices();\r\n  const { trainImages, testImages } = getTrainTestData(data);\r\n  const { batch: trainData } = getDataBatch({\r\n    batchSize: sampleSizes.train,\r\n    testImages: trainImages,\r\n    testIndices: trainIndices,\r\n    initIndex: 0,\r\n  });\r\n  const { batch: testData, shuffledTestIndex } = getDataBatch({\r\n    batchSize: sampleSizes.test,\r\n    testImages,\r\n    testIndices,\r\n    initIndex: 0,\r\n  });\r\n  yield call(trainModel, {\r\n    nn: model,\r\n    trainData,\r\n    testData,\r\n    batchSize: +learningOptions.batchSize,\r\n    epochs: +learningOptions.epochs,\r\n  });\r\n  const { batch: controlData } = getDataBatch({\r\n    batchSize: 10,\r\n    testImages,\r\n    testIndices,\r\n    initIndex: shuffledTestIndex,\r\n  });\r\n  const container1 = document.getElementById('initImage');\r\n  const container2 = document.getElementById('predsImage');\r\n  const preds = yield call(doPrediction, model, controlData);\r\n  yield call(display, controlData, container1);\r\n  yield call(display, preds, container2);\r\n}\r\n\r\nexport default function* mainSaga() {\r\n  yield takeLatest(TRAIN_MODEL, trainModelWorker);\r\n}\r\n","import { fork } from 'redux-saga/effects';\r\nimport modelsSaga from 'modules/models/sagas';\r\n\r\n/**\r\n * Root saga watcher. Launches all saga watchers\r\n */\r\nexport default function* rootSaga() {\r\n  yield fork(modelsSaga);\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport reducer from 'reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport App from 'App';\r\nimport rootSaga from 'sagas';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}